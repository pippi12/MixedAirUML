@startuml MixedAir
hide circle
skinparam {
    defaultFontName "Noto Sans JP"
}

package Buildings{
    package ThermalZones.Detailed{
        ' package Types{
            ' Class CFDBoundaryConditions << type >> {
            ' }
        ' }
        package BaseClasses {
            class ConstructionRecords << record >>  {
                + << parameter >> datConExt[NConExt]: ParameterConstruction "窓のない外装のパラメータ"
                + << parameter >> datConExtWin[NConExtWin]: ParameterConstructionWithWindow "窓のある外装のパラメータ"
                + << parameter >> datConPar[NConPar]: ParameterConstruction "空間内の間仕切りのパラメータ"
                + << parameter >> datConBou[NConBou]: ParameterConstruction "空間外との境界構造体のパラメータ"
                + << parameter >> surBou[NSurBou]: OpaqueSurface "熱伝導が空間外でモデル化された不透明な面のパラメータ"
                + << parameter >> dummyCon: Brick120 "上書きされるので無視してよい"
                + << parameter >> dummyGlaSys: SingleClear3 "上書きされるので無視してよい"
            }
            Class ParameterConstruction << record >> {
                + << parameter >> A: Area "構造体表面の面積"
            }
            class PartialParameterConstruction << record >> {
                + << parameter >> name: String "面の名前（MixedAirでは任意）"
                + << parameter >> layers: OpaqueConstructions.Generic "不透明な構造体の材料属性"
                + << parameter >> til: Angle "チルト（壁なら90度）"
                + << parameter >> azi: Angle "アジマス角（壁なら向いている方角で決まる）"
                ' + << final parameter >> is_floor=til > 2.74889125 and til < 3.53428875: Boolean
                ' + << final parameter >> is_ceiling=til > -0.392699 and til < 0.392699: Boolean
                + << parameter >> steadyStateInitial: Boolean "温度の初期値を与える場合はFalse"
                + << parameter >> T_a_start: Temperature "ポートA（外？）の初期温度（MixedAirにてMediumの初期温度になる）"
                + << parameter >> T_b_start: Temperature "ポートB（内？）の初期温度（MixedAirにてMediumの初期温度になる）"
                + << parameter >> stateAtSurface_a: Boolean "表面a上に状態変数を有するか"
                + << parameter >> stateAtSurface_b: Boolean "表面b上に状態変数を有するか"
                + << parameter >> boundaryCondition: CFDBoundaryConditions "不使用"
            }
        }
    }

    package HeatTransfer {
        package Types {
            Class SurfaceRoughness << type >> {
                VeryRough
                Rough
                Medium
                MediumSmooth
                Smooth
                VerySmooth
            }
        }
        package Data {
            package OpaqueConstructions {
                Class "Generic" as OpaqueConstructionsGeneric << record >>  {
                    + << parameter >> nLay: Integer "層の数"
                    + << parameter >> material[nLay]: Material: 層ごとの材料属性（外から内の順）"
                    ' + final parameter Real R  {  unit="m2.K/W"  }  =sum  {  material [ i ] .R for i in 1:nLay  }   
                    ' + final parameter Integer nSta [ nLay ]   {  each min=1  }   = {material [ i ] .nSta for i in 1:nLay} 
                    + << parameter >> absIR_a: Emissivity "外装面の赤外線吸収率"
                    + << parameter >> absIR_b: Emissivity "部屋面の赤外線吸収率"
                    + << parameter >> absSol_a: Emissivity "外装面の日射吸収率"
                    + << parameter >> absSol_b: Emissivity "部屋面の日射吸収率"
                    + << parameter >> roughness_a: SurfaceRoughness "外装表面の粗さ"
                }
            }
            package BaseClasses {
                class Material << record >>  {
                    + << parameter >> x: Length "厚み"
                    + << parameter >> k: ThermalConductivity "熱伝導率"
                    + << parameter >> c: SpecificHeatCapacity "比熱"
                    + << parameter >> d: Density "密度"
                    + << parameter >> R: m2.K/W "単位面積当たりの熱抵抗"
                    + << parameter >> nStaRef: Integer "参照材料（0.2mコンクリート）の状態変数の数"
                    + << parameter >> nSta: Integer "状態変数の数"
                    + << parameter >> steadyState: Boolean "定常計算かどうか"
                    + << parameter >> piRef: Real "参照材料のx/sqrt（α）＝温度変化の空間伝播速度"
                    + << parameter >> piMat: Real "x/sqrt（α）＝温度変化の空間伝播速度"
                    + << parameter >> nStaReal: Real "状態変数実数"
                    + << parameter >> TSol: Temperature "PCMにのみ使用される固相線温度"
                    + << parameter >> TLiq: Temperature "PCMにのみ使用される液相線温度"
                    + << parameter >> LHea: SpecificInternalEnergy "相変化潜熱"
                    ' + constant Boolean ensureMonotonicity = false 
                    ' + constant Boolean phasechange = false 
                }

            }
        }
    }
}

'=== ConstructionRecords ===
' ConstructionNumbers <|--down ConstructionRecords
' ParameterConstructionWithWindow -down--* "datConExtWin[NConExtWin]" ConstructionRecords
ParameterConstruction -down-* "datConExt[NConExt]" ConstructionRecords
ParameterConstruction -down-* "datConPar[NConPar]" ConstructionRecords
ParameterConstruction -down-* "datConBou[NConBou]" ConstructionRecords
' OpaqueSurface -down--* "surBou[NSurBou]" ConstructionRecords
' Brick120 -down--* "dummyCon" ConstructionRecords
' SingleClear3 -down--* "dummyGlaSys" ConstructionRecords

'=== ParameterConstruction ===
PartialParameterConstruction <|--down ParameterConstruction

'=== PartialParameterConstruction ===
OpaqueConstructionsGeneric -down-* "layers" PartialParameterConstruction
' CFDBoundaryConditions -down-* "boundaryCondition" PartialParameterConstruction

'===OpaqueConstructionsGeneric===
Material -down-* "material[nLay]"OpaqueConstructionsGeneric
SurfaceRoughness -down-* "roughness_a"OpaqueConstructionsGeneric




@enduml